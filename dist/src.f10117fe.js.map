{"version":3,"sources":["src/Engine.ts","src/GameObject.ts","src/Circle.ts","src/setup.js","src/Square.ts","src/index.ts"],"names":["exports","width","heigth"],"mappings":"AGAAA,OAAO,CAACC,KAAR,GAAgB,IAAhB;AACAD,OAAO,CAACE,MAAR,GAAiB,GAAjB;;;AHEA,ACHA,IDGA,ACHA,MDGA,ICHA;ADGA,ACHA;ADGA,ACHA,YDGA,ACHA;ADKE,ACLF,WDKE,ACLF,MDKE,CAAY,GCLd,GAAA,CDKE,ACOD,EDPoB;AAAnB,QAAA,KAAA,GAAA,IAAA,OKJF;AJKgB,AIJhB,EJIgB,UAAA,CAAA,cAAA,GAAd,YAAA;ADGO,ACFL,AIJJ,SLMS,ECFE,EDEF,GAAO,KCFK,CAAC,MDEN,CCFL,CAAmB,MAAnB,CAA0B,KAAjC;ADGA,ACFD,AIJH,GJEgB;ADMZ,AKNJ,WLMS,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAI,CAAC,WAAL,CAAiB,MAArC,EAA6C,CAAC,EAA9C,EAAkD;AAChD,ACJU,AIFhB,EJEgB,MDIV,ICJU,CAAA,eAAA,CDIW,CAAC,CCJ1B,IDI8B,CAAC,IAAN,CAArB,ECJJ;ADKG,ACJD,AIFJ,WJEW,UAAU,CAAC,OAAX,CAAmB,MAAnB,CAA0B,MAAjC;ADKD,ACJA,AIDH,GJDgB,EDAP;AKET;ALLI,ACMJ,AIAA,SLNS,ACMT,UAAA,CDNI,GAAuB,OAAO,CAAA,KAAP,EAAvB;AACD,ACPH,AIaA,CJbA,EAAA;AIcA;ALES,ACFT,AICA,ELCS,KCFT,CDES,ACFT,CDES,QCFT,CDES,ACFT,CDES,ECFM,GDEN,GAAP,ICFF,QDEE;AACE,AKAJ,ILAI,qBAAqB,CAAC,KAAK,IAAN,CAArB;AACD,AKAH,GLFS;AKGT;ALAS,AKCT,ELDS,MAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA,CAAgB,CAAT;AKET;ALDA,AKEA,SLFA,MAAA;AAjBA,AKoBA,CLpBA,EAAA;AKqBA;ALFA,AKIA,OLJA,CAAA,SAAA,CAAA,GAAe,MAAf;AKKA;AACA;AACA;AACA;AACA;AAEA;AHjCA,AEAA,ACkCA,IHlCA,AEAA,YFAA,AEAA,GFAA,AEAA,eFAA,AEAA,CFAA,AEAA,OFAA,AEAA,CFAA,AEAA,cFAA,AEAA,CFAA,AEAA,CFAA,AEAA;ACmCA;AHjCA,AEDA,ACm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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["import GameObject from \"./GameObject\";\nimport Time from \"./Time\";\n\nclass Engine {\n  protected gameObjects;\n  constructor(objects) {\n    this.gameObjects = [...objects];\n  }\n\n  public tick = () => {\n    // Time.update();\n\n    for (let i = 0; i < this.gameObjects.length; i++) {\n      requestAnimationFrame(this.tick);\n    }\n  };\n  public start() {\n    requestAnimationFrame(this.tick);\n  }\n  public kill() {}\n}\n\nexport default Engine;\n","abstract class GameObject {\n  public static context: CanvasRenderingContext2D;\n  protected coordX: number;\n  protected coordY: number;\n  public abstract render();\n\n  public static getCanvasWidth() {\n    return GameObject.context.canvas.width;\n  }\n  public static getCanvasHeight() {\n    return GameObject.context.canvas.height;\n  }\n}\n\nexport default GameObject;\n","import GameObject from \"./GameObject\";\n\nclass Circle extends GameObject {\n  protected size;\n  constructor(x, y, size) {\n    super();\n    this.size = size;\n    this.coordX = x;\n    this.coordY = y;\n  }\n\n  public render() {\n    const context = GameObject.context;\n    context.ellipse(\n      this.coordX,\n      this.coordY,\n      this.size,\n      this.size,\n      0,\n      0,\n      Math.PI * 2\n    );\n    context.fillStyle = \"#0074D9\";\n    context.fill();\n  }\n}\nexport default Circle;\n","exports.width = 1440;\nexports.heigth = 750;\n","import GameObject from \"./GameObject\";\nimport { width, heigth } from \"./setup\";\n\nclass Square extends GameObject {\n  protected size;\n  direction;\n  xSign;\n  speed = 10;\n  constructor(x, y, size) {\n    super();\n    this.size = size;\n    this.direction = true;\n    this.xSign = 1;\n    this.coordX = 0;\n    this.coordY = y;\n  }\n  public render() {\n    this.coordX += 10 * this.xSign;\n    const context = GameObject.context;\n    context.clearRect(0, 0, 1440, 778);\n    context.beginPath();\n    if (this.coordX == width - this.size || this.coordX == 0) {\n      // alert(this.direction);\n      this.direction = !this.direction;\n      this.xSign = this.direction ? 1 : -1;\n    }\n\n    context.rect(this.coordX, this.coordY, this.size, this.size);\n    context.fillStyle = \"#0074D9\";\n    context.fill();\n  }\n}\n\nexport default Square;\n","import { width, heigth } from \"../src/setup\";\n// import marioImage from \"../assets/06-mario.png\";\n// context.rect(width / 2.4, heigth / 2.5, 200, 200);\n// context.fillStyle = \"#808\";\n// context.fill();\n\n// context.ellipse(250, 250, 100, 100, 0, 0, Math.PI * 2);\n// context.fillStyle = \"#0074D9\";\n// context.fill();\n\n// const drawText = (color, text, x, y) => {\n//   context.fillStyle = color;\n//   context.textAlign = \"center\";\n//   context.fillText(text, x, y);\n//   context.restore();\n// };\n\n// let changeColor = ({ key }) => {\n//   let hash = { 1: \"#e6004c\", 2: \"#cc99ff\", 3: \"#0000ff\", 4: \"#009933\" };\n//   if (key in hash) {\n//     drawText(hash[key], key, 200, 200);\n//     context.fillStyle = hash[key];\n//     context.fill();\n//   }\n// };\n\n// let deleteKey = event => {\n//   setTimeout(() => {\n//     context.clearRect(0, 0, width, heigth);\n//   }, 120);\n// };\n// canvas.addEventListener(\"keyup\", deleteKey);\n\n// canvas.addEventListener(\"keypress\", changeColor);\n// let x = 100;\n// let y = 100;\n// const imagen = new Image();\n// imagen.src = marioImage;\n// let direction = 1;\n// let imageLoaded = () => {\n//   context.save();\n//   context.scale(-1, 1);\n\n//   context.restore();\n// };\n\n// let move = ({ key }) => {\n//   console.log(key);\n//   if (key == \"ArrowLeft\") {\n//     context.scale(-1, 1);\n\n//     direction = -1;\n//     context.clearRect(x - 200, y, 500, 500);\n//     x -= 50;\n//     console.log(\"x: \" + x * -1);\n//     console.log(direction);\n\n//     context.drawImage(imagen, x * -1, y);\n//   } else if (key == \"ArrowRight\") {\n//     direction = 1;\n\n//     context.clearRect(0, 0, 1440, 1000);\n//     context.scale(1, 1);\n//     x += 50;\n//     console.log(\"x: \" + x);\n//     context.drawImage(imagen, x * direction, y);\n//   }\n// };\n\n// imagen.addEventListener(\"load\", imageLoaded);\n// canvas.addEventListener(\"keydown\", move);\n// let volume = 1;\n\n// import audio from \"../assets/mlss-world-map.mp3\";\n// const sound = new Audio(audio);\n// let move = ({ key }) => {\n//   if (key == \"ArrowUp\") {\n//     if (sound.volume < 1) sound.volume += 0.1;\n//   } else if (key == \"ArrowDown\") {\n//     if (sound.volume >= 0.25) sound.volume -= 0.1;\n//   } else if (key == \"Meta\") sound.paused ? sound.play() : sound.pause(); //USE META SPACE NO JALA EN MAC\n// };\n\nimport Engine from \"./Engine\";\nimport GameObject from \"./GameObject\";\nimport Circle from \"./Circle\";\nimport Square from \"./Square\";\n// import Mario from \"./Mario\";\n\nconst canvas = document.getElementById(\"game-area\") as HTMLCanvasElement;\nconst context: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n// canvas.addEventListener(\"keydown\", move);\n\nconst engine = new Engine([new Square(200, 200, 250), new Circle(0, 100, 200)]);\nengine.start();\n"]}